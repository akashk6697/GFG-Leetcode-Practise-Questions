// https://leetcode.com/problems/climbing-stairs/
// TC -> O(N)
// SC -> O(1)


Bottom-up Iterative solution: 
1.Initialize base cases (prev = 1, prev2 = 1) to represent the number of ways to climb 1 and 2 stairs respectively.
2.Iterate from 2 to n, calculating the number of ways to climb each stair iteratively.
3.Update the previous values (prev and prev2) in each iteration.
4.Return the final result, which is the number of ways to climb n stairs (prev).

class Solution {
    public int climbStairs(int n) {

        //base case
        int prev = 1;
        int prev2 = 1;
        
        for(int i=2; i <= n; i++){
            int curr_i = prev2 + prev;
            prev2 = prev;
            prev = curr_i;
        }
        return prev;
    }
}
