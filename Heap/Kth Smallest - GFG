// https://www.geeksforgeeks.org/problems/kth-smallest-element5635/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=bottom_sticky_on_article
// TC - O(n log k)
// SC - O(k)

public static int kthSmallest(int[] arr, int k) {

        //max heap
        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Comparator.reverseOrder());

        //add all elements to max heap
        for(int i : arr){
            maxHeap.offer(i);

            // if if size is greater than k, remove the largest element
            if(maxHeap.size() > k){
                maxHeap.poll();
            }
        }
        //largest element of max heap will be the kth smallest
        return maxHeap.peek();
    }
