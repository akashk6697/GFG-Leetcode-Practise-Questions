//  https://www.geeksforgeeks.org/problems/triplet-sum-in-array-1587115621/1

// brute force approach
    //tc - O(n^3), sc - O(1)
    // run three nested loops and check if arr[i] + arr[j] + arr[k] == k or not
    // if yes return true else false
    public boolean find3Numbers(int[] arr, int n, int x){
        for(int i=0; i<n-2; i++){
            for(int j=i+1; j<n-1; j++){
                for(int k=j+1; k<n; k++){
                    if(arr[i]+arr[j]+arr[k] == x){
                        return true;
                    }
                }
            }
        }
        return false;
    }

// optimal approach - Two pointers
    //tc - O(n^2) , sc - O(1)
    // 1. sort the array
    // 2. run a loop from 0 to n-2 and initialize left pointer at i+1 and right at n-1
    // 3. run a loop until left < right and calculate sum of all three arr[i]+arr[left]+arr[right]
    // 4. if sum == x return true , if sum < x increment left else decrement right
    // 5. in the end if there is no match of sum return false

    public boolean optimalApproach(int[] arr, int n, int x){
        Arrays.sort(arr);
        for(int i =0; i<n-2; i++){
            int left = i+1;
            int right = n-1;

            while (left < right){
                int sum = arr[i] + arr[left] + arr[right];
                if( sum == x){
                    return true;
                }
                else if(sum < x){
                    left ++;
                }
                else {
                    right--;
                }
            }
        }
        return false;
    }
