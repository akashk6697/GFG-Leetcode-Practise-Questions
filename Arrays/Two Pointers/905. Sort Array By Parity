// https://leetcode.com/problems/sort-array-by-parity/description/


/************************************************************ Brute Force Approach ************************************************/
TC - O(n)
SC - O(n)

public int[] sortArrayByParity(int[] nums) {
        int n = nums.length;
        int[] result = new int[n];
        int i = 0;
        int j = n-1;

        for(int k=0;k<n; k++){
            if(nums[k]%2 == 0){
                result[i] = nums[k];
                i++;
            }
            else{
                result[j] = nums[k];
                j--;
            }
        }
        return result;
    }


/************************************************************ Two Pointers Approach ************************************************/

TC - O(n)
SC - O(1) 
public int[] sortArrayByParity(int[] nums) {
       int n = nums.length-1;

       int i = 0;
       int j = 0;

       while(i<=n){
        if(nums[i]%2 == 0){
            swap(nums,i,j);
            j++;
        }
        i++;
       }
       return nums;
    }

    private static void swap(int[]nums,int i, int j){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
