// https://leetcode.com/problems/copy-list-with-random-pointer/submissions/
// TC-> O(N)
// SC-> O(N)

public Node copyRandomList(Node head) {
        //empty LL diya hai to null return kardo
        if(head == null){
            return null;
        }

        //create hashmap, node ke corresponding konsa copy node create kiya store karne ke liye
        HashMap<Node , Node>hm = new HashMap<>();

        //Curr Node original ll ke upr traverse karne k liye
        Node curr = head;
        //prev pointer, naye linked list ko connect karne ke liye
        Node prev = null; // initially null
        //newHead nye linked list ke liye or vhi return karna hai last me
        Node newHead = null;

        //curr jaise jaise move krega hum connect karte jayenge, tab tak null na ho
        while (curr != null){
            //curr node ke corresponding copyNode banaya hai
            Node copyNode = new Node(curr.val);

            //curr node ke corresponding jo node banaya hai use map me store kar lo
            hm.put(curr,copyNode);

            //agar new list bana he nhi hai, newNode initially null tha , use point kardo copy node se
            if(newHead == null){
                newHead = copyNode;
                prev = copyNode;
            }
            //agar newHead already ban rkha hai to prev ka next point krdo jo abhi curr new node bana hai(copy node)
            else {
                prev.next = copyNode;
                prev = copyNode; // prev ab nye node pe aa gya

            }
            curr = curr.next; // curr already aage badh he rha tha
;        }
        // fill random pointers
        // firse curr start ko point krega
        curr = head;
        Node newCurr = newHead; //new curr copylist ke head ko point krega

        //jab tk curr null na ho jaye tab tk random bharte chalo

        while (curr != null){
            //agr curr ka random null hai to newcurr ka random bhi null honga
            if(curr.random == null){
                newCurr.random = null;
            }
            else {
                Node randomOriginalNode = curr.random; // original me random kya tha vo nikal rhe hai
                Node deepCopyCorrespondingRandomNode = hm.get(randomOriginalNode); // map se nikal lo orgNode ke corresponding
                newCurr.random = deepCopyCorrespondingRandomNode;

                //currnode ke corresponding jo node banaya tha use point krdo newCurr ke random se
                // newCurr.random = hm.get(curr.random); // else ki 3 line hata ke ye 1 single line bhi likh skte ho
            }
            curr = curr.next;
            newCurr = newCurr.next;
        }
        return newHead;
    }
