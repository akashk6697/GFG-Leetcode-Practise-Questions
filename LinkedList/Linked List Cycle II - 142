// https://leetcode.com/problems/linked-list-cycle-ii/
// TC -> O(n)
// SC -> O(1)

public class Solution {
    public ListNode detectCycle(ListNode head) {
        
        ListNode fastPtr = head;
        ListNode slowPtr = head;
        ListNode temp = head;
            
            while(fastPtr != null && fastPtr.next != null){
                fastPtr = fastPtr.next.next;
                slowPtr = slowPtr.next;
                
                if(slowPtr == fastPtr){
                    
                    while(slowPtr != temp){
                        temp = temp.next;
                        slowPtr = slowPtr.next;
                    }
                    return temp;
                }
            }
        return null;
    }
    
}
