// https://leetcode.com/problems/reorder-list/
TC-> O(N)
SC-> O(1)

class Solution {
    
    public void reorderList(ListNode head) {

        // find middle
        ListNode fast = head;
        ListNode slow = head;

        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode rev = reverse(slow);
        ListNode curr = head;

        while (rev.next != null){
            ListNode temp = curr.next;
            curr.next = rev;
            ListNode temprev = rev.next;
            rev.next = temp;
            curr = temp;
            rev = temprev;
        }
    }

    private ListNode reverse(ListNode head){
        ListNode curr = head;
        ListNode next = null;
        ListNode prev = null;

        while(curr != null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }

}
