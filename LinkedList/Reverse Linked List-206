//https://leetcode.com/problems/reverse-linked-list/?envType=list&envId=p1bbr2f5
//Iterative Approach - 
//TC - O(n), where n is no of nodes
//SC - O(1)

class Solution {
   public ListNode reverseList(ListNode head) {
    // Initialize three pointers: curr for current node, next for next node, and prev for previous node
    ListNode curr = head;
    ListNode next = null;
    ListNode prev = null;

    // Traverse the list until curr becomes null
    while (curr != null) {
        // Store the next node
        next = curr.next;
        // Reverse the current node's pointer to point to the previous node
        curr.next = prev;
        // Move prev to the current node
        prev = curr;
        // Move curr to the next node
        curr = next;
    }
    // After the loop end, prev will be the new head of the reversed list
    head = prev;
    return head;
}

